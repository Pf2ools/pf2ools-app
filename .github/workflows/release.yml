name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get-version
        uses: battila7/get-version-action@v2

      - name: Change package.json version to the tag version
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          version: ${{steps.get-version.outputs.version-without-v}}

      - name: Add VERSION Env Variable (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          echo "VERSION=${{steps.get-version.outputs.version-without-v}}" | Out-File -FilePath $env:GITHUB_ENV -Append # no need for -Encoding utf8

      - name: Install frontend dependencies
        env:
          VERSION: ${{steps.get-version.outputs.version-without-v}}
        run: npm install

      - name: Get changelog release info
        id: changelog
        uses: release-flow/keep-a-changelog-action@v3
        with:
          command: query
          version: ${{ steps.get-version.outputs.version-without-v }}

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: 'v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: ${{ steps.changelog.outputs.release-notes }}
          releaseDraft: true
          prerelease: false
